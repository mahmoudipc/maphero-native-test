name: ios-ci

on:
  push:
    branches:
      - main  # Trigger the workflow on any push to the main branch

jobs:
  build-and-release:
    runs-on: macos-latest

    env:
      NAME: MapHero
      NAME_LOWER: maphero
      URL: maphero.io
      VERSION: 0.0.1  # Default version, will be updated dynamically
      TEAMID: 68DUZ3F2NM
      IOS_DIR: platform/ios

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Bazel
        run: |
          curl -LO "https://github.com/bazelbuild/bazel/releases/download/7.3.1/bazel-7.3.1-installer-darwin-x86_64.sh"
          chmod +x bazel-7.3.1-installer-darwin-x86_64.sh
          ./bazel-7.3.1-installer-darwin-x86_64.sh --user
          export PATH="$HOME/bin:$PATH"
          echo "Bazel version: $(bazel --version)"

      - name: Fetch Latest Release Version
        id: get_latest_version
        run: |
          latest_version=$(git describe --tags $(git rev-list --tags --max-count=1) || echo "v0.0.0")
          echo "Latest version: $latest_version"
          echo "latest_version=$latest_version" >> $GITHUB_ENV

      - name: Calculate New Version
        id: calculate_version
        run: |
          # Extract version components
          latest_version=${{ env.latest_version }}
          echo "Current version is $latest_version"

          # Remove 'v' prefix and increment the patch version
          current_version=${latest_version#v}
          IFS='.' read -r major minor patch <<< "$current_version"
          patch=$((patch+1))
          new_version="v$major.$minor.$patch"

          echo "New version is $new_version"
          echo "VERSION=$new_version" >> $GITHUB_ENV

      - name: Build iOS App
        run: |
          bazel build //platform/ios:App

      - name: Build MapHeroApp Swift
        run: |
          bazel build //platform/ios/app-swift:MapHeroApp

      - name: Build MapHero dynamic framework with optimization
        run: |
          bazel build --compilation_mode=opt --features=dead_strip,thin_lto --objc_enable_binary_stripping \
           --apple_generate_dsym --output_groups=+dsyms --//:renderer=metal //platform/ios:MapHero.dynamic \
           --embed_label="${{ env.NAME_LOWER }}_ios_${{ env.VERSION }}"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Automatically provided by GitHub Actions
        with:
          tag_name: ${{ env.VERSION }}  # Tag for the release
          release_name: ${{ env.NAME }} ${{ env.VERSION }}
          body: "Release for ${{ env.NAME }} version ${{ env.VERSION }}"
          draft: false
          prerelease: false

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: maphero-build
          path: bazel-bin/platform/ios/  # Adjust to point to the correct build output location

      - name: Zip dSYM Files
        run: |
          cd bazel-bin/platform/ios
          zip -r MapHero-${{ env.VERSION }}-dSYM.zip *.dSYM

      - name: Upload dSYM Files
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bazel-bin/platform/ios/MapHero-${{ env.VERSION }}-dSYM.zip
          asset_name: MapHero-${{ env.VERSION }}-dSYM.zip
          asset_content_type: application/zip
